{
	id = 1
	cmd (
	echo bonjour | ; echo salut
	)
	commentaire (
	Le ';' ferme le fait d'ecouter stdin pour
	rajouter du texte.
	)
}

{
	id = 2
	cmd (
	| echo coucou
	)
	commentaire (
	Le vide entre le debut de la commande et le pipe
	n'est pas detecte.
	)
}

{
	id = 3
	cmd(
	echo \>
	)
	comentaire (
	Le > n'est pas gere comme un char pur mais toujours
	comme un metacher
	)
}

{
	id = 4
	cmd(
	> log echo -n
	)
	comentaire (
	Ajouter le dynamisme de la gestion de placement de
	l'executable dans le builtin.
	)
}

{
	id = 5
	cmd(
	unset ""
	)
	commentaire (
	double free
	)
}

{
	id = 6
	cmd(
	echo bonjour > | echo saluto
	)
	commentaire (
	Corriger une redirection en fin de job
	)
}

{
	id = 7
	cmd(
	echo bonjour > > salut
	)
	commentaire (
	Voir pourquoi les deux > fusionnent.
	)
}

{
	id = 8
	cmd(
	cat < sdfgsdfgsfd
	)
	commentaire (
	Revoir la gestion d'erreur sur la redirection en entree
	sur un fichier qui n'existe pas.
	)
}

{
	id = 9
	cmd(
	cd
	)
	commentaire (
	Quand cd est utilise tout seul il doit rediriger vers
	(voir la doc de bash)
	)
}

{
	id = 10
	cmd(
	sleep 10 [ctrl-C]
	)
	commentaire (
	modifier le $? qui doit etre a 130 
	)
}

{
	id = 11
	cmd(
	sleep 10 [ctrl-\]
	)
	commentaire (
	modifier le $? qui doit etre a 131 
	)
}

{
	id = 12
	commentaire(
	Gerer la variable d'environnement SHLVL qui compte
	combien de shell sont ouvert dans un autre
	)
}

{
	id = 13
	cmd(
	echo “bip | bip ; coyotte > < \” ” . bip | bip ; coyotte >< ”
	)
	commentaire(
	gerer le ';' dans des guillemets
	)
}

{
	id = 14
	cmd(
	)
	commentaire(
	)
}

{
	id = 12
	cmd(
	)
	commentaire(
	)
}

{
	id = 12
	cmd(
	)
	commentaire(
	)
}

{
	id = 12
	cmd(
	)
	commentaire(
	)
}

{
	id = 12
	cmd(
	)
	commentaire(
	)
}

{
	id = 12
	cmd(
	)
	commentaire(
	)
}

{
	id = 12
	cmd(
	)
	commentaire(
	)
}

{
	id = 12
	cmd(
	)
	commentaire(
	)
}

